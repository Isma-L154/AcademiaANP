@model IEnumerable<ANP_Academy.DAL.Models.Receta>

@{
    ViewData["Title"] = "Recetas de Parrilla";
}

<link rel="stylesheet" href="~/css/Recetas/Recetas.css" asp-append-version="true" />

<div class="container">
    <h1 class="text-center mb-4">Recetas de Parrilla</h1>

    <div class="row">
        @foreach (var receta in Model)
        {
            <div class="col-md-4 mb-3">
                <div class="card h-100">
                    <img src="@Url.Action("GetImage", "Recetas", new { id = receta.IdReceta })" class="card-img-top" alt="@receta.Titulo">
                    <div class="card-body">
                        <h5 class="card-title">@receta.Titulo</h5>

                        <!-- Mostrar el promedio de calificación debajo del título -->
                        <div class="rating">
                            @{
                                var fullStars = (int)receta.Rating;
                                var hasHalfStar = receta.Rating - fullStars >= 0.5;
                            }
                            @for (int i = 1; i <= 5; i++)
                            {
                                <input type="radio" name="rating-@receta.IdReceta" id="star-@i-@receta.IdReceta" value="@i" />
                                @if (i <= fullStars)
                                {
                                    <label for="star-@i-@receta.IdReceta" class="full-star">★</label>
                                }
                                else if (i == fullStars + 1 && hasHalfStar)
                                {
                                    <label for="star-@i-@receta.IdReceta" class="half-star">☆</label>
                                }
                                else
                                {
                                    <label for="star-@i-@receta.IdReceta">☆</label>
                                }
                            }
                            <span class="rating-average">(@receta.Rating.ToString("0.0"))</span>
                            <!-- Spinner de carga -->
                            <div class="loading-spinner spinner-border text-warning" role="status" style="display:none;">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <!-- Mensaje temporal -->
                            <div class="temp-message" style="display:none; color: green; margin-left: 10px;">Gracias por su calificación</div>
                        </div>

                        <p class="card-text">@receta.Descripcion</p>
                        <a asp-action="InfoReceta" asp-route-id="@receta.IdReceta" class="btn btn-danger">Ver Receta</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.6/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.min.js"></script>

    <!-- Script para manejar la calificación con estrellas -->
    <script>
        $(document).ready(function () {
            $('input[type="radio"]').change(function () {
                var rating = $(this).val();
                var idReceta = $(this).attr('name').split('-')[1];
                var token = $('input[name="__RequestVerificationToken"]').val();
                var $spinner = $(this).closest('.rating').find('.loading-spinner');
                var $ratingAverage = $(this).closest('.rating').find('.rating-average');
                var $message = $(this).closest('.rating').find('.temp-message');
                var $starsContainer = $(this).closest('.rating');

                // Mostrar el spinner de carga
                $spinner.show();

                $.ajax({
                    url: '@Url.Action("RateReceta", "Recetas")',
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': token
                    },
                    data: {
                        __RequestVerificationToken: token,
                        idReceta: idReceta,
                        rating: rating
                    },
                    success: function (response) {
                        // Actualizar el promedio de calificación
                        if (response.newRating !== undefined) {
                            $ratingAverage.text('(' + response.newRating.toFixed(1) + ')');
                            // Actualizar las estrellas
                            var fullStars = Math.floor(response.newRating);
                            var hasHalfStar = response.newRating - fullStars >= 0.5;

                            $starsContainer.find('label').each(function (index) {
                                if (index < fullStars) {
                                    $(this).removeClass('half-star').addClass('full-star').text('★');
                                } else if (index === fullStars && hasHalfStar) {
                                    $(this).removeClass('full-star').addClass('half-star').text('☆');
                                } else {
                                    $(this).removeClass('full-star half-star').text('☆');
                                }
                            });
                        }
                        // Mostrar el mensaje temporal
                        $message.show().delay(2000).fadeOut();
                    },
                    error: function (xhr, status, error) {
                        alert('Hubo un error al enviar su calificación.');
                        console.log("Error: " + error);
                        console.log("Status: " + status);
                        console.log(xhr.responseText);
                    },
                    complete: function () {
                        // Ocultar el spinner de carga
                        $spinner.hide();
                    }
                });
            });
        });
    </script>
}
